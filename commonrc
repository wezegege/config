#!/usr/bin/sh
#
# ~/.commonrc
#

#====================================================================
# environment
#====================================================================

# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/.local/bin" ] ; then
    PATH="$HOME/.local/bin:$PATH"
fi
if [ -d "$HOME/.local/lib/python" ] ; then
    PYTHONPATH="$HOME/.local/lib/python:$PYTHONPATH"
fi

# PROJECTPATH

PROJECTPATH="$HOME/.local/lib/python:$HOME/.local/lib"
PROJECTPATH="$PROJECTPATH:$HOME/workspace/cpp:$HOME/workspace/python"
PROJECTPATH="$PROJECTPATH:$HOME/workspace/perl:$HOME/workspace/php"
PROJECTPATH="$PROJECTPATH:$HOME/workspace/sh:$HOME/workspace/eclipse"
PROJECTPATH="$PROJECTPATH:$HOME/workspace/wiki:$HOME/workspace"
PROJECTPATH="$PROJECTPATH:/usr/local/lib:/usr/local/share:/usr/local"
PROJECTPATH="$PROJECTPATH:/usr/lib/python2.7/site-packages:/usr/lib/python2.7:/usr/lib"
PROJECTPATH="$PROJECTPATH:/usr/include:/usr/share"
PROJECTPATH="$PROJECTPATH:/var/lib:/var/www"
PROJECTPATH="$PROJECTPATH:/etc"
export PROJECTPATH

# Set default editor
if [[ -x $(which vim) ]]
then
  export EDITOR="vim"
  export USE_EDITOR=$EDITOR
  export VISUAL=$EDITOR
fi

#====================================================================
# functions
#====================================================================

# parent_dir 3 -> cd ../../../
function parent_dir {
  count=1
  [ -z $1 ] || count=$1
  dir=""
  for i in `seq $count`; do
    dir="$dir../"
  done
  cd $dir
}


# goes to root of a svn or git project, or root of a project given its
# folder, or to home
function project_root {
  # svn project ?
  dest=""
  parent="."
  while [ -d "$parent/.svn" ]; do
    dest=$parent
    parent="$parent/.."
  done
  [[ $dest == "" ]] && root=`git rev-parse --show-cdup 2>/dev/null` && dest="$root."
  if [[ $dest == "" ]]; then
    current_dir=`pwd`
    for folder in $(echo $PROJECTPATH | tr ":" "\n"); do
      if [[ $current_dir == "${folder}/"* ]]; then
        dest=`echo $current_dir | sed -e "s#${folder}/\([^/]\+\).*#${folder}/\1#"`
        break
      fi
    done
  fi
  [[ $dest == "" ]] && dest=~
  cd $dest
}

function pkg-install {
   hash apt-get 2>/dev/null
   [ $? -eq 0 ] && apt-get install
   hash pacman 2>/dev/null
   [ $? -eq 0 ] && pacman -S
}

function pkg-upgrade {
   hash apt-get 2>/dev/null
   [ $? -eq 0 ] && apt-get update && apt-get upgrade
   hash pacman 2>/dev/null
   [ $? -eq 0 ] && pacman -Syu
}

#====================================================================
# aliases
#====================================================================

# ls

alias ls="ls --color=auto"
alias ll="ls -A --group-directories-first"
alias lq="ls -oh --group-directories-first"
alias la="ll -oh"
alias lt="ls -lrt"
alias lg="lt -A"

# grep

alias grep="grep -n --color=auto"
alias egrep="egrep -n --color=auto"
alias fgrep="fgrep -n --color=auto"

# common commands

alias less="less -R"
alias mkdir="mkdir -p"
alias ps="ps aux"
alias du="du -h"
alias duu="du -skh *"
alias df="df -h"

# archive

alias dotar="tar pczf"
alias untar="tar xvf"
alias seetar="tar ztvf"

# debian packages

alias seepack="dpkg -c"
alias instpack="dpkg -i"

# functions

alias ..="parent_dir"
alias cdd="project_root"

# applications

alias sudo="sudo -E "
alias diff="diff -u"
alias tailf="tail -f"
alias lns="ln -s"

alias sqlite="sqlite3"
alias fmake="make -j 4"
alias vi="vim"
alias perl="perl -w"
alias shutdown="shutdown -h"

#====================================================================
# specificities
#====================================================================
if [[ -f /usr/local/bin/virtualenvwrapper.sh && ! -d "~/.virtualenvs" ]]; then
   source /usr/local/bin/virtualenvwrapper.sh
fi

if [ -f ~/.uncommonrc ]; then
   source ~/.uncommonrc   # --> Read /etc/bashrc, if present.
fi
